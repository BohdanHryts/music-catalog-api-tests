#!/bin/bash\n\n# Music Catalog API Test Runner\nset -e\n\necho \"🎵 Music Catalog API Test Runner 🎵\"\necho \"==================================\"\n\n# Check if virtual environment exists\nif [ ! -d \"venv\" ]; then\n    echo \"Creating virtual environment...\"\n    python -m venv venv\nfi\n\n# Activate virtual environment\nsource venv/bin/activate\n\n# Install dependencies\necho \"Installing dependencies...\"\npip install -r requirements.txt\n\n# Create reports directory\nmkdir -p reports\n\n# Run linting\necho \"Running code quality checks...\"\nflake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics || echo \"Linting completed with warnings\"\nmypy src --ignore-missing-imports || echo \"Type checking completed with warnings\"\n\n# Function to run test suite\nrun_test_suite() {\n    local test_type=$1\n    local test_path=$2\n    local markers=$3\n    \n    echo \"Running $test_type tests...\"\n    \n    if [ -n \"$markers\" ]; then\n        pytest \"$test_path\" -m \"$markers\" \\\n            -v \\\n            --html=\"reports/${test_type}-report.html\" \\\n            --self-contained-html \\\n            --cov=src \\\n            --cov-append\n    else\n        pytest \"$test_path\" \\\n            -v \\\n            --html=\"reports/${test_type}-report.html\" \\\n            --self-contained-html \\\n            --cov=src \\\n            --cov-append\n    fi\n}\n\n# Parse command line arguments\nTEST_SUITE=${1:-\"all\"}\n\ncase $TEST_SUITE in\n    \"smoke\")\n        run_test_suite \"smoke\" \"tests/\" \"smoke\"\n        ;;\n    \"integration\") \n        run_test_suite \"integration\" \"tests/integration/\" \"\"\n        ;;\n    \"contract\")\n        run_test_suite \"contract\" \"tests/contract/\" \"\"\n        ;;\n    \"performance\")\n        run_test_suite \"performance\" \"tests/performance/\" \"\"\n        ;;\n    \"regression\")\n        run_test_suite \"regression\" \"tests/\" \"regression\"\n        ;;\n    \"all\")\n        run_test_suite \"smoke\" \"tests/\" \"smoke\"\n        run_test_suite \"integration\" \"tests/integration/\" \"\"\n        ;;\n    *)\n        echo \"Usage: $0 [smoke|integration|contract|performance|regression|all]\"\n        exit 1\n        ;;\nesac\n\n# Generate coverage report\necho \"Generating coverage report...\"\ncoverage html -d reports/coverage_html || echo \"Coverage report generated with warnings\"\ncoverage xml -o reports/coverage.xml || echo \"Coverage XML generated with warnings\"\n\necho \"✅ Test execution completed!\"\necho \"📊 Reports generated in ./reports/ directory\"\necho \"🔍 Open reports/coverage_html/index.html for coverage details\""