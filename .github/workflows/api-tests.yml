name: API Tests\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n  schedule:\n    # Run daily at 2 AM UTC\n    - cron: '0 2 * * *'\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        python-version: [3.8, 3.9, '3.10', 3.11]\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Set up Python ${{ matrix.python-version }}\n      uses: actions/setup-python@v3\n      with:\n        python-version: ${{ matrix.python-version }}\n    \n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements.txt\n    \n    - name: Lint with flake8\n      run: |\n        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics\n        flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics\n    \n    - name: Type check with mypy\n      run: |\n        mypy src --ignore-missing-imports\n    \n    - name: Run smoke tests\n      env:\n        BASE_URL: ${{ secrets.API_BASE_URL }}\n        API_KEY: ${{ secrets.API_KEY }}\n      run: |\n        pytest tests/ -m smoke -v --html=reports/smoke-report.html --self-contained-html\n    \n    - name: Run integration tests\n      env:\n        BASE_URL: ${{ secrets.API_BASE_URL }}\n        API_KEY: ${{ secrets.API_KEY }}\n      run: |\n        pytest tests/integration/ -v --html=reports/integration-report.html --self-contained-html\n    \n    - name: Run contract tests\n      env:\n        BASE_URL: ${{ secrets.API_BASE_URL }}\n        API_KEY: ${{ secrets.API_KEY }}\n      run: |\n        pytest tests/contract/ -v --html=reports/contract-report.html --self-contained-html\n    \n    - name: Upload test reports\n      uses: actions/upload-artifact@v3\n      if: always()\n      with:\n        name: test-reports-${{ matrix.python-version }}\n        path: reports/\n    \n    - name: Generate coverage report\n      run: |\n        pytest --cov=src --cov-report=xml --cov-report=html\n    \n    - name: Upload coverage to Codecov\n      uses: codecov/codecov-action@v3\n      with:\n        file: ./coverage.xml\n        flags: unittests\n        name: codecov-umbrella\n\n  performance:\n    runs-on: ubuntu-latest\n    needs: test\n    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[perf]')\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Set up Python 3.9\n      uses: actions/setup-python@v3\n      with:\n        python-version: 3.9\n    \n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements.txt\n    \n    - name: Run performance tests\n      env:\n        BASE_URL: ${{ secrets.API_BASE_URL }}\n        API_KEY: ${{ secrets.API_KEY }}\n      run: |\n        pytest tests/performance/ -v --html=reports/performance-report.html --self-contained-html\n    \n    - name: Upload performance reports\n      uses: actions/upload-artifact@v3\n      if: always()\n      with:\n        name: performance-reports\n        path: reports/"